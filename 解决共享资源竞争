21.3.1
  
  递增程序自身也许要多个步骤，所以在此期间任务也可能会被线程机制挂起，所以在java中递增不是原子操作
  
  基本上所有的并发模式都采用序列化共享资源方案，这意味着在同一时间只有一个任务可以访问共享资源，通过锁机制实现，锁语句产生一种互相排斥的效果，称之为互斥量
  
  
  
  所有的对象都自动含有单一的锁，当在任意对象上使用synchronized修饰方法是此对象都被加锁，这时对象上所有的其他的被synchronized修饰的方法同样需要等待锁释放
  在使用并发时 对象为private域是非常重要的，否则 synchronized关键字就不能防止其他任务直接访问域，这样就会产生冲突
  
  一个任务可以多次获得对象的锁，比如调用一个对象上的一个方法，这个方法又调用对象的其他方法则会对锁进行计数，锁被释放一次即递减计数，直到完全释放锁
  针对每一个类 也可以使用 synchronized static 进行修饰（可以在类的范围内防止对static的并发访问）
  
  
  

