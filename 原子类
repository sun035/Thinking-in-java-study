  
  
  
  21.3.4
  
      se5引入里诸如AtomicInteger,AtomicLong,AtomicReference 等特殊的原子性变量
 这些类被调整为可以在某些现代处理器上可获得的 并且是机器级别的原子性操作，通常一般在涉及性能调优的时候用到他们
 
 
 
  Atomic类被设计用来构建java.util.concurrent中的类,所以对于我们，通常使用锁还是更安全一些
  
  
  
  21.3.5 临界区
  
  
  
   通过代码理解synchronized 加锁在方法上和在方法中使用同步块的效率
  
  
  



线程本地化存储


线程本地化存储是一种自动化机制，可以为使用相同变量的每个不同的线程都创建不同的存储
利用ThreadLocal 作为静态域存储，使用get() set()进行获取或存储
