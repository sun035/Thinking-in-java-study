wait()使你可以等待某个条件发生变化，而改变这个条件超出了当前方法的控制能力通常这种条件将有另一个任务来改变
只有在notify()和notifyAll()发生时，这个任务才会被唤醒去检查所产生的变化，因此  wait()提供了一种在任务之间对活动同步的方式

wait（）不同于sleep()和yield()，wait（）会在挂起的时候释放锁资源，这以为着其他任务（synchronized）可以获得对象的锁,
因为其他任务通常会产生变化 这种变化正是被挂起的任务被重新唤醒所感兴趣的变化
因此 当你调用wait()的时候 就是在声明 “我已经刚刚做完能做的所有的事情 因此我要在这里等待 但是我希望其他的synchronized操作的方法可以在wait()期间被调用”

有两种形式的wait():

1.接受毫秒值作为参数，含义和sleep（）方法里的参数的意思相同，都是指“在此期间暂停” 但是和sleep()不同的是，
对于wait()而言 在wait()期间对象锁是释放的，而且可以通过notify(）或者notifyAll（）来唤醒，从wait()中恢复执行

2.不接受任何参数，无限等待下去直到被唤醒



注意 这3个方法并不在Thread中而是在object类中

同时调用这3个方法必须要在同步方法或者同步块中（sleep()不需要操作锁所以不需要），否则会有运行时异常，即：任务调用必须含有对象的锁






